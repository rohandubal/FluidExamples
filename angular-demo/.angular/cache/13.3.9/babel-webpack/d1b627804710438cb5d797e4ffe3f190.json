{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/**\n * Helper function for getting the default Fluid Object from a Container. This function only works for\n * Containers that support \"/\" request.\n *\n * T - defines the type you expect to be returned\n *\n * @param container - Container you're attempting to get the object from\n */\nexport function getDefaultObjectFromContainer(_x) {\n  return _getDefaultObjectFromContainer.apply(this, arguments);\n}\n/**\n * Helper function for getting as Fluid Object from a Container given a Unique Id. This function only works for\n * Containers that support getting FluidObjects via request.\n *\n * T - defines the type you expect to be returned\n *\n * @param id - Unique id of the FluidObject\n * @param container - Container you're attempting to get the object from\n */\n\nfunction _getDefaultObjectFromContainer() {\n  _getDefaultObjectFromContainer = _asyncToGenerator(function* (container) {\n    const url = \"/\";\n    const response = yield container.request({\n      url\n    }); // Verify the response\n\n    if (response.status !== 200 || response.mimeType !== \"fluid/object\") {\n      throw new Error(`Unable to retrieve Fluid object at URL: \"${url}\"`);\n    } else if (response.value === undefined) {\n      throw new Error(`Empty response from URL: \"${url}\"`);\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return response.value;\n  });\n  return _getDefaultObjectFromContainer.apply(this, arguments);\n}\n\nexport function getObjectWithIdFromContainer(_x2, _x3) {\n  return _getObjectWithIdFromContainer.apply(this, arguments);\n}\n/**\n * Helper function for getting a Fluid Object from a Container given a path/url. This function only works for\n * Containers that support getting FluidObjects via request.\n *\n * T - defines the type you expect to be returned\n *\n * @param path - Unique path/url of the FluidObject\n * @param container - Container you're attempting to get the object from\n */\n\nfunction _getObjectWithIdFromContainer() {\n  _getObjectWithIdFromContainer = _asyncToGenerator(function* (id, container) {\n    const url = `/${id}`;\n    const response = yield container.request({\n      url\n    }); // Verify the response\n\n    if (response.status !== 200 || response.mimeType !== \"fluid/object\") {\n      throw new Error(`Unable to retrieve Fluid object with ID: \"${id}\" from URL: \"${url}\"`);\n    } else if (response.value === undefined) {\n      throw new Error(`Empty response for ID: \"${id}\" from URL: \"${url}\"`);\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return response.value;\n  });\n  return _getObjectWithIdFromContainer.apply(this, arguments);\n}\n\nexport function getObjectFromContainer(_x4, _x5) {\n  return _getObjectFromContainer.apply(this, arguments);\n} //# sourceMappingURL=containerInteractions.js.map\n\nfunction _getObjectFromContainer() {\n  _getObjectFromContainer = _asyncToGenerator(function* (path, container) {\n    const response = yield container.request({\n      url: path\n    });\n\n    if (response.status !== 200 || response.mimeType !== \"fluid/object\") {\n      throw new Error(`Unable to retrieve Fluid object with from URL: \"${path}\"`);\n    } else if (response.value === undefined) {\n      throw new Error(`Empty response for from URL: \"${path}\"`);\n    } // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n\n    return response.value;\n  });\n  return _getObjectFromContainer.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}