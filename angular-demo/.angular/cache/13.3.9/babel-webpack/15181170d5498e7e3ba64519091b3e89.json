{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Driver Error types\n * Lists types that are likely to be used by all drivers\n */\nexport var DriverErrorType = /*#__PURE__*/(() => {\n  (function (DriverErrorType) {\n    /**\n     * A fatal error with no specific interpretation covered by other DriverErrorType values\n     */\n    DriverErrorType[\"genericError\"] = \"genericError\";\n    /**\n     * Some non-categorized (below) networking error\n     * Include errors like  fatal server error (usually 500).\n     */\n\n    DriverErrorType[\"genericNetworkError\"] = \"genericNetworkError\";\n    /**\n     * Access denied - user does not have enough privileges to open a file, or continue to operate on a file\n     */\n\n    DriverErrorType[\"authorizationError\"] = \"authorizationError\";\n    /**\n     * File not found, or file deleted during session\n     */\n\n    DriverErrorType[\"fileNotFoundOrAccessDeniedError\"] = \"fileNotFoundOrAccessDeniedError\";\n    /**\n     * Throttling error from server. Server is busy and is asking not to reconnect for some time\n     */\n\n    DriverErrorType[\"throttlingError\"] = \"throttlingError\";\n    /**\n     * We can not reach server due to computer being offline.\n     */\n\n    DriverErrorType[\"offlineError\"] = \"offlineError\";\n    /*\n     * Unsupported client protocol\n     */\n\n    DriverErrorType[\"unsupportedClientProtocolVersion\"] = \"unsupportedClientProtocolVersion\";\n    /**\n     * User does not have write permissions to a file, but is changing content of a file.\n     * That might be indication of some data store error - data stores should not generate ops in readonly mode.\n     */\n\n    DriverErrorType[\"writeError\"] = \"writeError\";\n    /**\n     * A generic fetch failure that indicates we were not able to get a response from the server.\n     * This may be due to the client being offline (though, if we are able to detect offline state it will be\n     * logged as an offlineError instead).  Other possibilities could be DNS errors, malformed fetch request,\n     * CSP violation, etc.\n     */\n\n    DriverErrorType[\"fetchFailure\"] = \"fetchFailure\";\n    /**\n     * Unexpected response from server. Either JSON is malformed, or some required properties are missing\n     */\n\n    DriverErrorType[\"incorrectServerResponse\"] = \"incorrectServerResponse\";\n    /**\n     * This error occurs when the file is modified externally (not through Fluid protocol) in storage.\n     * It will occur in cases where client has some state or cache that is based on old content (identity) of a file,\n     * and storage / driver / loader detects such mismatch.\n     * When it's hit, client needs to forget all the knowlege about this file and start over.\n     */\n\n    DriverErrorType[\"fileOverwrittenInStorage\"] = \"fileOverwrittenInStorage\";\n    /**\n     * The document is read-only and delta stream connection is forbidden.\n     */\n\n    DriverErrorType[\"deltaStreamConnectionForbidden\"] = \"deltaStreamConnectionForbidden\";\n    /**\n     * The location of file/container can change on server. So if the file location moves and we try to access the old\n     * location, then this error is thrown to let the client know about the new location info.\n     */\n\n    DriverErrorType[\"locationRedirection\"] = \"locationRedirection\";\n  })(DriverErrorType || (DriverErrorType = {}));\n\n  return DriverErrorType;\n})(); //# sourceMappingURL=driverError.js.map","map":null,"metadata":{},"sourceType":"module"}