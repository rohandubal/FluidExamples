{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { isFluidPackage } from \"@fluidframework/container-definitions\";\nexport var ReconnectMode = /*#__PURE__*/(() => {\n  (function (ReconnectMode) {\n    ReconnectMode[\"Never\"] = \"Never\";\n    ReconnectMode[\"Disabled\"] = \"Disabled\";\n    ReconnectMode[\"Enabled\"] = \"Enabled\";\n  })(ReconnectMode || (ReconnectMode = {}));\n\n  return ReconnectMode;\n})();\n\n/**\n *\n * @param codeDetails- - Data structure used to describe the code to load on the Fluid document\n * @returns The name of the Fluid package\n */\nexport const getPackageName = codeDetails => {\n  let containerPackageName;\n\n  if (codeDetails && \"name\" in codeDetails) {\n    containerPackageName = codeDetails;\n  } else if (isFluidPackage(codeDetails === null || codeDetails === void 0 ? void 0 : codeDetails.package)) {\n    containerPackageName = codeDetails === null || codeDetails === void 0 ? void 0 : codeDetails.package.name;\n  } else {\n    containerPackageName = codeDetails === null || codeDetails === void 0 ? void 0 : codeDetails.package;\n  }\n\n  return {\n    name: containerPackageName\n  };\n}; //# sourceMappingURL=contracts.js.map","map":null,"metadata":{},"sourceType":"module"}