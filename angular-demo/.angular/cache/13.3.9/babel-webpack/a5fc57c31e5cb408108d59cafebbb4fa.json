{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { RequestParser, create404Response } from \"@fluidframework/runtime-utils\";\n/**\n  * The RuntimeRequestHandlerBuilder creates a runtime request handler based on request handlers.\n  * The provided handlers sequentially applied until one is able to satisfy the request.\n  */\n\nexport class RuntimeRequestHandlerBuilder {\n  constructor() {\n    this.handlers = [];\n  }\n\n  pushHandler(...handlers) {\n    if (handlers !== undefined) {\n      this.handlers.push(...handlers);\n    }\n  }\n\n  handleRequest(request, runtime) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const parser = RequestParser.create(request);\n\n      for (const handler of _this.handlers) {\n        const response = yield handler(parser, runtime);\n\n        if (response !== undefined) {\n          return response;\n        }\n      }\n\n      return create404Response(request);\n    })();\n  }\n\n}\nexport function buildRuntimeRequestHandler(...handlers) {\n  const builder = new RuntimeRequestHandlerBuilder();\n  builder.pushHandler(...handlers);\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (request, runtime) {\n      return builder.handleRequest(request, runtime);\n    });\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n} //# sourceMappingURL=runtimeRequestHandlerBuilder.js.map","map":null,"metadata":{},"sourceType":"module"}