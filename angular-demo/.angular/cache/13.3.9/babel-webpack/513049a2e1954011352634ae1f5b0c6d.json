{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { MessageType } from \"@fluidframework/protocol-definitions\";\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below\n * \"op\"\n * \"summarize\"\n * \"propose\"\n * \"reject\"\n * \"noop\"\n */\n\nexport function isClientMessage(message) {\n  if (isRuntimeMessage(message)) {\n    return true;\n  }\n\n  switch (message.type) {\n    case MessageType.Propose:\n    case MessageType.Reject:\n    case MessageType.NoOp:\n      return true;\n\n    default:\n      return false;\n  }\n}\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below\n * \"op\"\n * \"summarize\"\n */\n\nexport function isRuntimeMessage(message) {\n  return message.type === MessageType.Operation || message.type === MessageType.Summarize;\n}\nvar RuntimeMessage = /*#__PURE__*/(() => {\n  (function (RuntimeMessage) {\n    RuntimeMessage[\"FluidDataStoreOp\"] = \"component\";\n    RuntimeMessage[\"Attach\"] = \"attach\";\n    RuntimeMessage[\"ChunkedOp\"] = \"chunkedOp\";\n    RuntimeMessage[\"BlobAttach\"] = \"blobAttach\";\n    RuntimeMessage[\"Rejoin\"] = \"rejoin\";\n    RuntimeMessage[\"Alias\"] = \"alias\";\n    RuntimeMessage[\"Operation\"] = \"op\";\n  })(RuntimeMessage || (RuntimeMessage = {}));\n\n  return RuntimeMessage;\n})();\n\n/**\n *\n * @param message-message\n * @returns whether or not the message type is one listed below (legacy)\n * \"component\"\n * \"attach\"\n * \"chunkedOp\"\n * \"blobAttach\"\n * \"rejoin\"\n * \"alias\"\n * \"op\"\n */\nexport function isUnpackedRuntimeMessage(message) {\n  if (Object.values(RuntimeMessage).includes(message.type)) {\n    return true;\n  }\n\n  return false;\n} //# sourceMappingURL=messageRecognition.js.map","map":null,"metadata":{},"sourceType":"module"}