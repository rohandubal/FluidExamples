{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nexport var RestLessFieldNames = /*#__PURE__*/(() => {\n  (function (RestLessFieldNames) {\n    RestLessFieldNames[\"Method\"] = \"method\";\n    RestLessFieldNames[\"Header\"] = \"header\";\n    RestLessFieldNames[\"Body\"] = \"body\";\n  })(RestLessFieldNames || (RestLessFieldNames = {}));\n\n  return RestLessFieldNames;\n})();\n\nconst encodeHeader = (headerKey, headerValue) => {\n  return `${headerKey}: ${headerValue}`;\n};\n/**\n * Client for communicating with a \"RestLess\" server.\n * Translates a typical RESTful HTTP request into \"RestLess\" HTTP format:\n *\n * POST \\<path\\> HTTP/\\<1.1|2\\>\n *\n * HOST \\<hostname\\>\n *\n * Content-Type: application/x-www-form-urlencoded\n *\n * <url-encoded-headers-body-and-method>\n */\n\n\nexport class RestLessClient {\n  /**\n   * Translates request from REST to \"RestLess\" out-of-place.\n   */\n  translate(request) {\n    var _a, _b;\n\n    const newRequest = Object.assign({}, request);\n    const body = new URLSearchParams();\n    body.append(RestLessFieldNames.Method, (_a = newRequest.method) !== null && _a !== void 0 ? _a : \"GET\");\n\n    if (newRequest.headers) {\n      for (const [headerKey, headerValue] of Object.entries(newRequest.headers)) {\n        const encodedHeader = encodeHeader(headerKey, headerValue);\n        body.append(RestLessFieldNames.Header, encodedHeader);\n      }\n    }\n\n    if (newRequest.data && [\"post\", \"put\", \"patch\"].includes((_b = newRequest.method) === null || _b === void 0 ? void 0 : _b.toLowerCase())) {\n      const stringifiedBody = JSON.stringify(newRequest.data);\n      body.append(RestLessFieldNames.Body, stringifiedBody);\n    }\n\n    newRequest.data = body.toString();\n    newRequest.method = \"POST\";\n    newRequest.headers = {\n      // TODO: when we support blob/file uploads, we should potentially add compatibility with multipart/form-data\n      \"Content-Type\": \"application/x-www-form-urlencoded;restless\"\n    };\n    return newRequest;\n  }\n\n} //# sourceMappingURL=restLessClient.js.map","map":null,"metadata":{},"sourceType":"module"}