{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { addBlobToSummary } from \"@fluidframework/runtime-utils\";\nimport { ChannelDeltaConnection } from \"./channelDeltaConnection\";\nimport { ChannelStorageService } from \"./channelStorageService\";\nexport const attributesBlobKey = \".attributes\";\nexport function createServiceEndpoints(id, connected, submitFn, dirtyFn, addedGCOutboundReferenceFn, storageService, logger, tree, extraBlobs) {\n  const deltaConnection = new ChannelDeltaConnection(id, connected, (message, localOpMetadata) => submitFn(message, localOpMetadata), dirtyFn, addedGCOutboundReferenceFn);\n  const objectStorage = new ChannelStorageService(tree, storageService, logger, extraBlobs);\n  return {\n    deltaConnection,\n    objectStorage\n  };\n}\nexport function summarizeChannel(channel, fullTree = false, trackState = false, telemetryContext) {\n  const summarizeResult = channel.getAttachSummary(fullTree, trackState, telemetryContext); // Add the channel attributes to the returned result.\n\n  addBlobToSummary(summarizeResult, attributesBlobKey, JSON.stringify(channel.attributes));\n  return summarizeResult;\n}\nexport function summarizeChannelAsync(_x) {\n  return _summarizeChannelAsync.apply(this, arguments);\n} //# sourceMappingURL=channelContext.js.map\n\nfunction _summarizeChannelAsync() {\n  _summarizeChannelAsync = _asyncToGenerator(function* (channel, fullTree = false, trackState = false, telemetryContext) {\n    const summarizeResult = yield channel.summarize(fullTree, trackState, telemetryContext); // Add the channel attributes to the returned result.\n\n    addBlobToSummary(summarizeResult, attributesBlobKey, JSON.stringify(channel.attributes));\n    return summarizeResult;\n  });\n  return _summarizeChannelAsync.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}