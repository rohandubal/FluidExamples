{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { LoaderCachingPolicy } from \"@fluidframework/driver-definitions\";\nimport { DocumentStorageServiceProxy, PrefetchDocumentStorageService } from \"@fluidframework/driver-utils\";\nimport { WholeSummaryDocumentStorageService } from \"./wholeSummaryDocumentStorageService\";\nimport { ShreddedSummaryDocumentStorageService } from \"./shreddedSummaryDocumentStorageService\";\nexport class DocumentStorageService extends DocumentStorageServiceProxy {\n  constructor(id, manager, logger, policies = {}, driverPolicies, blobCache, snapshotTreeCache, noCacheGitManager, getStorageManager) {\n    super(DocumentStorageService.loadInternalDocumentStorageService(id, manager, logger, policies, driverPolicies, blobCache, snapshotTreeCache, noCacheGitManager, getStorageManager));\n    this.id = id;\n    this.manager = manager;\n    this.noCacheGitManager = noCacheGitManager;\n    this._logTailSha = undefined;\n  }\n\n  get logTailSha() {\n    return this._logTailSha;\n  }\n\n  static loadInternalDocumentStorageService(id, manager, logger, policies, driverPolicies, blobCache, snapshotTreeCache, noCacheGitManager, getStorageManager) {\n    const storageService = (driverPolicies === null || driverPolicies === void 0 ? void 0 : driverPolicies.enableWholeSummaryUpload) ? new WholeSummaryDocumentStorageService(id, manager, logger, policies, driverPolicies, blobCache, snapshotTreeCache, noCacheGitManager, getStorageManager) : new ShreddedSummaryDocumentStorageService(id, manager, logger, policies, driverPolicies, blobCache, snapshotTreeCache, getStorageManager); // TODO: worth prefetching latest summary making version + snapshot call with WholeSummary storage?\n\n    if (!(driverPolicies === null || driverPolicies === void 0 ? void 0 : driverPolicies.enableWholeSummaryUpload) && policies.caching === LoaderCachingPolicy.Prefetch) {\n      return new PrefetchDocumentStorageService(storageService);\n    }\n\n    return storageService;\n  }\n\n  getSnapshotTree(version) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const tree = yield _this.internalStorageService.getSnapshotTree(version);\n\n      if (tree !== null) {\n        _this._logTailSha = \".logTail\" in tree.trees ? tree.trees[\".logTail\"].blobs.logTail : undefined;\n      }\n\n      return tree;\n    })();\n  }\n\n} //# sourceMappingURL=documentStorageService.js.map","map":null,"metadata":{},"sourceType":"module"}