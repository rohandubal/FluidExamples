{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nconst hasTelemetryPropFunctions = x => typeof (x === null || x === void 0 ? void 0 : x.getTelemetryProperties) === \"function\" && typeof (x === null || x === void 0 ? void 0 : x.addTelemetryProperties) === \"function\";\n\nexport const hasErrorInstanceId = x => typeof (x === null || x === void 0 ? void 0 : x.errorInstanceId) === \"string\";\n/** type guard for IFluidErrorBase interface */\n\nexport function isFluidError(e) {\n  return typeof (e === null || e === void 0 ? void 0 : e.errorType) === \"string\" && typeof (e === null || e === void 0 ? void 0 : e.message) === \"string\" && hasErrorInstanceId(e) && hasTelemetryPropFunctions(e);\n}\n/** type guard for old standard of valid/known errors */\n\nexport function isValidLegacyError(e) {\n  return typeof (e === null || e === void 0 ? void 0 : e.errorType) === \"string\" && typeof (e === null || e === void 0 ? void 0 : e.message) === \"string\" && hasTelemetryPropFunctions(e);\n} //# sourceMappingURL=fluidErrorBase.js.map","map":null,"metadata":{},"sourceType":"module"}