{"ast":null,"code":"import { TypedEventEmitter } from \"@fluidframework/common-utils\";\n/**\n * Event Emitter helper class\n * Any exceptions thrown by listeners will be caught and raised through \"error\" event.\n * Any exception thrown by \"error\" listeners will propagate to the caller.\n */\n\nexport class EventEmitterWithErrorHandling extends TypedEventEmitter {\n  constructor(errorHandler) {\n    super();\n    this.errorHandler = errorHandler;\n  }\n\n  emit(event, ...args) {\n    try {\n      return super.emit(event, ...args);\n    } catch (error) {\n      this.errorHandler(event, error);\n      return true;\n    }\n  }\n\n} //# sourceMappingURL=eventEmitterWithErrorHandling.js.map","map":null,"metadata":{},"sourceType":"module"}