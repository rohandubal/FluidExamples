{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { runWithRetry } from \"@fluidframework/driver-utils\";\nexport class RetriableGitManager {\n  constructor(internalGitManager, logger) {\n    this.internalGitManager = internalGitManager;\n    this.logger = logger;\n  }\n\n  getHeader(id, sha) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this.internalGitManager.getHeader(id, sha);\n      }), \"gitManager_getHeader\");\n    })();\n  }\n\n  getFullTree(sha) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this2.internalGitManager.getFullTree(sha);\n      }), \"gitManager_getFullTree\");\n    })();\n  }\n\n  getCommit(sha) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this3.internalGitManager.getCommit(sha);\n      }), \"gitManager_getCommit\");\n    })();\n  }\n\n  getCommits(sha, count) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this4.internalGitManager.getCommits(sha, count);\n      }), \"gitManager_getCommits\");\n    })();\n  }\n\n  getTree(root, recursive) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this5.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this5.internalGitManager.getTree(root, recursive);\n      }), \"gitManager_getTree\");\n    })();\n  }\n\n  getBlob(sha) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this6.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this6.internalGitManager.getBlob(sha);\n      }), \"gitManager_getBlob\");\n    })();\n  }\n\n  getRawUrl(sha) {\n    return this.internalGitManager.getRawUrl(sha);\n  }\n\n  getContent(commit, path) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this7.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this7.internalGitManager.getContent(commit, path);\n      }), \"gitManager_getContent\");\n    })();\n  }\n\n  createBlob(content, encoding) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this8.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this8.internalGitManager.createBlob(content, encoding);\n      }), \"gitManager_createBlob\");\n    })();\n  }\n\n  createGitTree(params) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this9.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this9.internalGitManager.createGitTree(params);\n      }), \"gitManager_createGitTree\");\n    })();\n  }\n\n  createTree(files) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this10.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this10.internalGitManager.createTree(files);\n      }), \"gitManager_createTree\");\n    })();\n  }\n\n  createCommit(commit) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this11.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this11.internalGitManager.createCommit(commit);\n      }), \"gitManager_createCommit\");\n    })();\n  }\n\n  getRef(ref) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this12.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this12.internalGitManager.getRef(ref);\n      }), \"gitManager_getRef\");\n    })();\n  }\n\n  createRef(branch, sha) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this13.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this13.internalGitManager.createRef(branch, sha);\n      }), \"gitManager_createRef\");\n    })();\n  }\n\n  upsertRef(branch, commitSha) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this14.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this14.internalGitManager.upsertRef(branch, commitSha);\n      }), \"gitManager_upsertRef\");\n    })();\n  }\n\n  write(branch, inputTree, parents, message) {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this15.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this15.internalGitManager.write(branch, inputTree, parents, message);\n      }), \"gitManager_write\");\n    })();\n  }\n\n  createSummary(summary) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this16.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this16.internalGitManager.createSummary(summary);\n      }), \"gitManager_createSummary\");\n    })();\n  }\n\n  deleteSummary(softDelete) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this17.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this17.internalGitManager.deleteSummary(softDelete);\n      }), \"gitManager_deleteSummary\");\n    })();\n  }\n\n  getSummary(sha) {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this18.runWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this18.internalGitManager.getSummary(sha);\n      }), \"gitManager_getSummary\");\n    })();\n  }\n\n  runWithRetry(api, callName) {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      return runWithRetry(api, callName, _this19.logger, {});\n    })();\n  }\n\n} //# sourceMappingURL=retriableGitManager.js.map","map":null,"metadata":{},"sourceType":"module"}