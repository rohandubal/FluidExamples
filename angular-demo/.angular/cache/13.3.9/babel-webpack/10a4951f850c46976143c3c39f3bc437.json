{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nexport var ConnectionState = /*#__PURE__*/(() => {\n  (function (ConnectionState) {\n    /**\n     * The container is not connected to the ordering service\n     * Note - When in this state the container may be about to reconnect,\n     * or may remain disconnected until explicitly told to connect.\n     */\n    ConnectionState[ConnectionState[\"Disconnected\"] = 0] = \"Disconnected\";\n    /**\n     * The container is disconnected but actively trying to establish a new connection\n     * PLEASE NOTE that this numerical value falls out of the order you may expect for this state\n     */\n\n    ConnectionState[ConnectionState[\"EstablishingConnection\"] = 3] = \"EstablishingConnection\";\n    /**\n     * See {@link ConnectionState.CatchingUp}, which is the new name for this state.\n     * @deprecated - This state itself is not gone, just being renamed. Please use {@link ConnectionState.CatchingUp}.\n     */\n\n    ConnectionState[ConnectionState[\"Connecting\"] = 1] = \"Connecting\";\n    /**\n     * The container has an inbound connection only, and is catching up to the latest known state from the service.\n     */\n\n    ConnectionState[ConnectionState[\"CatchingUp\"] = 1] = \"CatchingUp\";\n    /**\n     * The container is fully connected and syncing\n     */\n\n    ConnectionState[ConnectionState[\"Connected\"] = 2] = \"Connected\";\n  })(ConnectionState || (ConnectionState = {}));\n\n  return ConnectionState;\n})(); //# sourceMappingURL=connectionState.js.map","map":null,"metadata":{},"sourceType":"module"}