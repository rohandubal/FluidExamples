{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\sdeshpande\\\\Documents\\\\FluidExamples\\\\angular-demo\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { defaultRouteRequestHandler } from \"../request-handlers\";\nimport { BaseContainerRuntimeFactory } from \"./baseContainerRuntimeFactory\";\nconst defaultDataStoreId = \"default\";\n/**\n * A ContainerRuntimeFactory that initializes Containers with a single default data store, which can be requested from\n * the container with an empty URL.\n *\n * This factory should be exposed as fluidExport off the entry point to your module.\n */\n\nexport let ContainerRuntimeFactoryWithDefaultDataStore = /*#__PURE__*/(() => {\n  class ContainerRuntimeFactoryWithDefaultDataStore extends BaseContainerRuntimeFactory {\n    constructor(defaultFactory, registryEntries, dependencyContainer, requestHandlers = [], runtimeOptions) {\n      super(registryEntries, dependencyContainer, [defaultRouteRequestHandler(defaultDataStoreId), ...requestHandlers], runtimeOptions);\n      this.defaultFactory = defaultFactory;\n    }\n    /**\n     * {@inheritDoc BaseContainerRuntimeFactory.containerInitializingFirstTime}\n     */\n\n\n    containerInitializingFirstTime(runtime) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const dataStore = yield runtime.createDataStore(_this.defaultFactory.type);\n        yield dataStore.trySetAlias(defaultDataStoreId);\n      })();\n    }\n\n  }\n\n  ContainerRuntimeFactoryWithDefaultDataStore.defaultDataStoreId = defaultDataStoreId; //# sourceMappingURL=containerRuntimeFactoryWithDefaultDataStore.js.map\n\n  return ContainerRuntimeFactoryWithDefaultDataStore;\n})();","map":null,"metadata":{},"sourceType":"module"}