{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Generates the absolute path for a Fluid object given its path and its parent routeContext.\n * @param path - The path to the Fluid object relative to the route context.\n * @param routeContext - The route context that contains the Fluid object.\n * @returns The absolute path to the Fluid object from the root of the Container.\n */\nexport function generateHandleContextPath(path, routeContext) {\n  if (path === \"\") {\n    // The `path` is empty.\n    // If the routeContext does not exist, this is the root.\n    // If the routeContext exists, the absolute path is the same as that of the routeContext.\n    return routeContext === undefined ? \"\" : routeContext.absolutePath;\n  } else {\n    // Remove beginning and trailing slashes, if any, from the path.\n    let normalizedPath = path.startsWith(\"/\") ? path.slice(1) : path;\n    normalizedPath = normalizedPath.endsWith(\"/\") ? normalizedPath.slice(0, -1) : normalizedPath; // If the routeContext does not exist, path is the absolute path.\n    // If the routeContext exists, absolute path is routeContext's absolute path plus the path.\n\n    return routeContext === undefined ? `/${normalizedPath}` : `${routeContext.absolutePath === \"/\" ? \"\" : routeContext.absolutePath}/${normalizedPath}`;\n  }\n} //# sourceMappingURL=dataStoreHandleContextUtils.js.map","map":null,"metadata":{},"sourceType":"module"}