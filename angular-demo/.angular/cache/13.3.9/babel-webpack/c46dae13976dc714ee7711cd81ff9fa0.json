{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * The attachment state of some Fluid data (e.g. a container or data store), denoting whether it is uploaded to the\n * service.  The transition from detached to attached state is a one-way transition.\n */\nexport var AttachState = /*#__PURE__*/(() => {\n  (function (AttachState) {\n    /**\n     * In detached state, the data is only present on the local client's machine.  It has not yet been uploaded\n     * to the service.\n     */\n    AttachState[\"Detached\"] = \"Detached\";\n    /**\n     * In attaching state, the data has started the upload to the service, but has not yet completed.\n     */\n\n    AttachState[\"Attaching\"] = \"Attaching\";\n    /**\n     * In attached state, the data has completed upload to the service.  It can be accessed by other clients after\n     * reaching attached state.\n     */\n\n    AttachState[\"Attached\"] = \"Attached\";\n  })(AttachState || (AttachState = {}));\n\n  return AttachState;\n})();\n// Represents the bind state of the entity.\nexport var BindState = /*#__PURE__*/(() => {\n  (function (BindState) {\n    BindState[\"NotBound\"] = \"NotBound\";\n    BindState[\"Binding\"] = \"Binding\";\n    BindState[\"Bound\"] = \"Bound\";\n  })(BindState || (BindState = {}));\n\n  return BindState;\n})();\nexport const IRuntimeFactory = \"IRuntimeFactory\"; //# sourceMappingURL=runtime.js.map","map":null,"metadata":{},"sourceType":"module"}