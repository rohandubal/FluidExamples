{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { Uint8ArrayToString } from \"@fluidframework/common-utils\";\nimport { SummaryType } from \"@fluidframework/protocol-definitions\";\n/**\n * Utility api to convert ISummaryTree to a summary tree where blob contents are only utf8 strings.\n * @param summary - Summary supplied by the runtime to upload.\n * @returns - Modified summary tree where the blob contents could be utf8 string only.\n */\n\nexport function convertSummaryToCreateNewSummary(summary) {\n  const keys = Object.keys(summary.tree);\n\n  for (const key of keys) {\n    const summaryObject = summary.tree[key];\n\n    switch (summaryObject.type) {\n      case SummaryType.Tree:\n        {\n          summary.tree[key] = convertSummaryToCreateNewSummary(summaryObject);\n          break;\n        }\n\n      case SummaryType.Blob:\n        {\n          summaryObject.content = typeof summaryObject.content === \"string\" ? summaryObject.content : Uint8ArrayToString(summaryObject.content, \"utf8\");\n          break;\n        }\n\n      case SummaryType.Handle:\n        {\n          throw new Error(\"No handle should be present for first summary!!\");\n        }\n\n      default:\n        {\n          throw new Error(`Unknown tree type ${summaryObject.type}`);\n        }\n    }\n  }\n\n  return summary;\n} //# sourceMappingURL=createNewUtils.js.map","map":null,"metadata":{},"sourceType":"module"}