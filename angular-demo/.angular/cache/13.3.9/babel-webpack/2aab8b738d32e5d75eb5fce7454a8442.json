{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { IsoBuffer } from \"./indexNode\";\nexport const fromBase64ToUtf8 = input => IsoBuffer.from(input, \"base64\").toString(\"utf-8\");\nexport const fromUtf8ToBase64 = input => IsoBuffer.from(input, \"utf8\").toString(\"base64\");\n/**\n * Convenience function to convert unknown encoding to utf8 that avoids\n * buffer copies/encode ops when no conversion is needed\n * @param input - The source string to convert\n * @param encoding - The source string's encoding\n */\n\nexport const toUtf8 = (input, encoding) => {\n  switch (encoding) {\n    case \"utf8\":\n    case \"utf-8\":\n      return input;\n\n    default:\n      return IsoBuffer.from(input, encoding).toString();\n  }\n}; //# sourceMappingURL=base64Encoding.js.map","map":null,"metadata":{},"sourceType":"module"}