{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { SortedSegmentSet } from \"./sortedSegmentSet\";\nexport class TrackingGroup {\n  constructor() {\n    this.segmentSet = new SortedSegmentSet();\n  }\n\n  get segments() {\n    return this.segmentSet.items;\n  }\n\n  get size() {\n    return this.segmentSet.size;\n  }\n\n  has(segment) {\n    return this.segmentSet.has(segment);\n  }\n\n  link(segment) {\n    if (!this.segmentSet.has(segment)) {\n      this.segmentSet.addOrUpdate(segment);\n      segment.trackingCollection.link(this);\n    }\n  }\n\n  unlink(segment) {\n    if (this.segmentSet.remove(segment)) {\n      segment.trackingCollection.unlink(this);\n    }\n  }\n\n}\nexport class TrackingGroupCollection {\n  constructor(segment) {\n    this.segment = segment;\n    this.trackingGroups = new Set();\n  }\n\n  link(trackingGroup) {\n    if (trackingGroup) {\n      if (!this.trackingGroups.has(trackingGroup)) {\n        this.trackingGroups.add(trackingGroup);\n      }\n\n      if (!trackingGroup.has(this.segment)) {\n        trackingGroup.link(this.segment);\n      }\n    }\n  }\n\n  unlink(trackingGroup) {\n    if (trackingGroup.has(this.segment)) {\n      trackingGroup.unlink(this.segment);\n    }\n\n    this.trackingGroups.delete(trackingGroup);\n  }\n\n  copyTo(segment) {\n    this.trackingGroups.forEach(sg => segment.trackingCollection.link(sg));\n  }\n\n  get empty() {\n    return this.trackingGroups.size === 0;\n  }\n\n  matches(trackingCollection) {\n    if (!trackingCollection || this.trackingGroups.size !== trackingCollection.trackingGroups.size) {\n      return false;\n    }\n\n    for (const tg of this.trackingGroups.values()) {\n      if (!trackingCollection.trackingGroups.has(tg)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n} //# sourceMappingURL=mergeTreeTracking.js.map","map":null,"metadata":{},"sourceType":"module"}